From: Russell Coker <russell@coker.com.au>
Date: Sun, 26 Feb 2012 19:39:24 +0100
Subject: init files

---
 mcstrans/src/mcstrans.init   |   33 ++++++++----
 restorecond/restorecond.init |  115 ++++++++++++++++++++----------------------
 sandbox/sandbox.init         |   40 ++++++++++-----
 3 files changed, 104 insertions(+), 84 deletions(-)

--- a/mcstrans/src/mcstrans.init
+++ b/mcstrans/src/mcstrans.init
@@ -1,4 +1,15 @@
 #!/bin/bash
+### BEGIN INIT INFO
+# Provides:          mcstransd
+# Required-Start:    $remote_fs $syslog
+# Required-Stop:     $remote_fs $syslog
+# Default-Start:     2 3 4 5
+# Default-Stop:      0 1 6
+# Short-Description: The daemon to make sensitivity labels human readable form
+# Description:       This daemon maps machine readable sensitivity labels
+#                    (numbered levels and categories) to a human readable form
+#                    (arbitrary names assigned by the sysadmin).
+### END INIT INFO
 #
 # mcstransd        This starts and stops mcstransd
 #
@@ -6,7 +17,6 @@
 # description: This starts the SELinux Context Translation System Daemon
 #
 # processname: /sbin/mcstransd
-# pidfile: /var/run/mcstransd.pid
 #
 # Return values according to LSB for all commands but status:
 # 0 - success
@@ -20,10 +30,12 @@
 
 PATH=/sbin:/bin:/usr/bin:/usr/sbin
 prog="mcstransd"
-lockfile=/var/lock/subsys/$prog
+lockfile=/var/lock/$prog
 
-# Source function library.
-. /etc/init.d/functions
+# Get lsb functions
+. /lib/lsb/init-functions
+# Load the VERBOSE setting and other rcS variables
+. /lib/init/vars.sh
 
 # Allow anyone to run status
 if [ "$1" = "status" ] ; then
@@ -43,15 +55,14 @@
 start(){
 	test -x /sbin/mcstransd  || exit 5
 	echo -n $"Starting $prog: "
-	if status $prog > /dev/null; then
-		echo -n $"$prog: already running"
-		failure
-		echo
-		return 1
+	if ! [ -d /var/run/setrans ]; then
+		rm -rf /var/run/setrans
+		install -d -o root -g root /var/run/setrans
+		[ -x /sbin/restorecon ] && /sbin/restorecon /var/run/setrans
 	fi
 
 	unset HOME MAIL USER USERNAME
-	daemon $prog "$EXTRAOPTIONS"
+	start-stop-daemon --start --quiet --exec /sbin/mcstransd -- "$EXTRAOPTIONS"
 	RETVAL=$?
 	echo
 	if test $RETVAL = 0 ; then
@@ -62,11 +73,10 @@
 
 stop(){
 	echo -n $"Stopping $prog: "
-	killproc $prog
-	RETVAL=$?
+	killall $prog
 	echo
 	rm -f $lockfile
-	return $RETVAL
+	return 0
 }
 
 restart(){
--- a/restorecond/restorecond.init
+++ b/restorecond/restorecond.init
@@ -1,16 +1,16 @@
 #!/bin/sh
-#
-# restorecond:		Daemon used to maintain path file context
-#
-# chkconfig:	- 12 87
-# description:	restorecond uses inotify to look for creation of new files \
-# listed in the /etc/selinux/restorecond.conf file, and restores the \
-# correct security context.
-#
-# processname: /usr/sbin/restorecond
-# config: /etc/selinux/restorecond.conf 
-# pidfile: /var/run/restorecond.pid
-#
+### BEGIN INIT INFO
+# Provides:          restorecond
+# Required-Start:    $remote_fs $syslog
+# Required-Stop:     $remote_fs $syslog
+# Default-Start:     2 3 4 5
+# Default-Stop:      0 1 6
+# Short-Description: Start the Daemon used to maintain path file context
+# Description:       uses inotify to look for creation of new files
+#                    listed in the /etc/selinux/restorecond.conf file,
+#                    and restores the correct security context.
+### END INIT INFO
+
 # Return values according to LSB for all commands but status:
 # 0 - success
 # 1 - generic or unspecified error
@@ -23,67 +23,62 @@
 
 PATH=/sbin:/bin:/usr/bin:/usr/sbin
 
-# Source function library.
-. /etc/rc.d/init.d/functions
+# Check for daemon presence
+test -x /usr/sbin/restorecond  || exit 0
 
-[ -x /usr/sbin/selinuxenabled ] && /usr/sbin/selinuxenabled || exit 7
+# Test to see if SELinux is enabled
+[ -x /usr/sbin/selinuxenabled ] && /usr/sbin/selinuxenabled || exit 0
 
 # Check that we are root ... so non-root users stop here
-test $EUID = 0  || exit 4
+if [ $(id -u) != 0 ] && [ "$1" != status ]; then
+	exit 4
+fi
 
-test -x /usr/sbin/restorecond  || exit 5
-test -f /etc/selinux/restorecond.conf  || exit 6
 
-RETVAL=0
+# Get lsb functions
+. /lib/lsb/init-functions
+# Load the VERBOSE setting and other rcS variables
+. /lib/init/vars.sh
+# Test to see if we are configured
+if [ ! -f  /etc/selinux/restorecond.conf  ] && [ "$1" != status ]; then
+    log_failure_msg "There is no configuration file for restorecond."
+    log_failure_msg "Please create /etc/selinux/restorecond.conf."
+    exit 6
+fi
 
-start() 
-{
-        echo -n $"Starting restorecond: "
-	unset HOME MAIL USER USERNAME
-        daemon /usr/sbin/restorecond 
-	RETVAL=$?
-	touch /var/lock/subsys/restorecond
-        echo
-	return $RETVAL
-}
-
-stop() 
-{
-        echo -n $"Shutting down restorecond: "
-	killproc restorecond
-	RETVAL=$?
-	rm -f  /var/lock/subsys/restorecond
-        echo
-	return $RETVAL
-}
-
-restart() 
-{
-    stop
-    start
-}
+RETVAL=0
 
 # See how we were called.
 case "$1" in
-  start)
-	start
-        ;;
-  stop)
-	stop
+    start)
+        log_daemon_msg "Starting file context maintaining daemon" "restorecond"
+        unset LANG LC_TIME LC_ALL LC_MESSAGES LC_NUMERIC LC_MONETARY LC_COLLATE
+        start-stop-daemon --start --quiet  --oknodo --pidfile /var/run/restorecond.pid --exec /usr/sbin/restorecond
+        RETVAL=$?
+        log_end_msg $RETVAL
         ;;
-  status)
-	status restorecond
+    stop)
+        log_daemon_msg "Stopping  file context maintaining daemon" "restorecond"
+        unset LANG LC_TIME LC_ALL LC_MESSAGES LC_NUMERIC LC_MONETARY LC_COLLATE
+        start-stop-daemon --stop --quiet --oknodo --pidfile /var/run/restorecond.pid --retry 2 --exec /usr/sbin/restorecond
 	RETVAL=$?
+        log_end_msg $RETVAL
+        ;;
+    force-reload|restart)
+        log_action_begin_msg "Restarting restorecond"
+        unset LANG LC_TIME LC_ALL LC_MESSAGES LC_NUMERIC LC_MONETARY LC_COLLATE
+        $0 stop  || RETVAL=1
+        sleep 1
+        $0 start || RETVAL=1
+        log_action_end_msg $RETVAL
 	;;
-  force-reload|restart|reload)
-	restart
-	;;
-  condrestart)
-	[ -e /var/lock/subsys/restorecond ] && restart || :
+    status)
+	status_of_proc /usr/sbin/restorecond restorecond
+	exit $?
 	;;
-  *)
-        echo $"Usage: $0 {start|stop|restart|force-reload|status|condrestart}"
-        RETVAL=3
+    *)
+        log_success_msg "Usage: $0 {start|stop|restart|reload|condrestart|status}"
+        RETVAL=1
 esac
 
 exit $RETVAL
--- a/sandbox/sandbox.init
+++ b/sandbox/sandbox.init
@@ -1,27 +1,37 @@
 #!/bin/bash
-## BEGIN INIT INFO
+### BEGIN INIT INFO
 # Provides: sandbox
-# Default-Start: 3 4 5
-# Default-Stop: 0 1 2 3 4 6
-# Required-Start:
-#              
-## END INIT INFO
-# sandbox:        Set up / mountpoint to be shared, /var/tmp, /tmp, /home/sandbox unshared
-#
-# chkconfig: 345 1 99
-#
+# Required-Start:    $remote_fs $syslog
+# Required-Stop:     $remote_fs $syslog
+# Default-Start: 2 3 4 5
+# Default-Stop: 0 1 6
+# Short-Description: Set up namespace for sandbox
 # description: sandbox, xguest and other apps that want to use pam_namespace \
 #              require this script be run at boot.  This service script does \
 #              not actually run any service but sets up: \
 #              / to be shared by any app that starts a separate namespace
 #              If you do not use sandbox, xguest or pam_namespace you can turn \
 #              this service off.\
+### END INIT INFO
+# sandbox:        Set up / mountpoint to be shared, /var/tmp, /tmp, /home/sandbox unshared
+#
+# chkconfig: 345 1 99
 #
 
-# Source function library.
-. /etc/init.d/functions
+# Get lsb functions
+. /lib/lsb/init-functions
+# Load the VERBOSE setting and other rcS variables
+. /lib/init/vars.sh
+if [ -f /etc/default/sandbox ]; then
+  . /etc/default/sandbox
+fi
+
+if [ "$RUN" = "NO" ]; then
+  echo "Sandbox disabled, edit /etc/default/sandbox to enable it"
+  exit 0
+fi
 
-LOCKFILE=/var/lock/subsys/sandbox
+LOCKFILE=/var/lock/sandbox
 
 base=${0##*/}
 
@@ -55,6 +65,10 @@
 	start && success || failure
 	;;
 
+    force-reload)
+	start && success || failure
+	;;
+
     start)
 	start && success || failure
 	echo
